// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gestorFcc.Data;

#nullable disable

namespace gestorFcc.Migrations
{
    [DbContext(typeof(ContextoAplicacionBD))]
    [Migration("20251031033605_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gestorFcc.Data.Entidades.Alumno", b =>
                {
                    b.Property<string>("matricula")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("apellidoMaterno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("matricula");

                    b.ToTable("Alumno");
                });

            modelBuilder.Entity("gestorFcc.Data.Entidades.AlumnoCurso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("fechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("id_curso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matricula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("periodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("AlumnoCurso");
                });

            modelBuilder.Entity("gestorFcc.Data.Entidades.Coloquio", b =>
                {
                    b.Property<string>("id_coloquio")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("hora")
                        .HasColumnType("time");

                    b.Property<string>("lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_coloquio");

                    b.ToTable("Coloquio");
                });

            modelBuilder.Entity("gestorFcc.Data.Entidades.Coordinador", b =>
                {
                    b.Property<string>("id_coordinador")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_coordinador");

                    b.ToTable("Coordinador");
                });

            modelBuilder.Entity("gestorFcc.Data.Entidades.Curso", b =>
                {
                    b.Property<string>("id_curso")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("anio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaRegistroCurso")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("periodo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_curso");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("gestorFcc.Data.Entidades.Docente", b =>
                {
                    b.Property<string>("id_docente")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("adscripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("apellidoMaterno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("correoBuap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correoViep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cubiculo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("fechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("tesista")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_docente");

                    b.ToTable("Docente");
                });

            modelBuilder.Entity("gestorFcc.Data.Entidades.DocenteCurso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("fechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("id_curso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("id_docente")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("periodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("DocenteCurso");
                });

            modelBuilder.Entity("gestorFcc.Data.Entidades.Expediente", b =>
                {
                    b.Property<string>("id_expediente")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cartaCompromiso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cartaRecomendacion1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cartaRecomendacion2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedulaLicenciatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedulaMaestria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comprobanteToefl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("curriculumVitae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exani")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kardexSemestral")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pagoInscripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("protocolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publicaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tituloLicenciatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tituloMaestria")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_expediente");

                    b.ToTable("Expediente");
                });
#pragma warning restore 612, 618
        }
    }
}
